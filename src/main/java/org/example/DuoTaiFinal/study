1.多态
    优点是

        1.多态的左边是解耦合的，便于扩展和维护

        people a = new student();

        2.定义方法时，使用的是父类的形参，可以接受一切子类对象，扩展性更强，更便利。

    缺点是
        1.不能调用子类独有功能
            原因是搜索方法时是找的父类的方法

用法是在方法里可以接受一切的对象比如
public void run (people a){}
这个就可以接受老师和学生两个对象而下面就是为了使用子类独有功能时不会报错

=================================================================

为解决多态的不能调用子类的独有功能，实现强制类型转换

强制类型转换 teacher t=a;

自动类型转换 people a =  new student();

虽然不会报错，但是可能会在编译时发生ClassCastException类型转换错误

ClassCastException类型转换异常

Java建议在强制类型转换时,使用instanceof来判断类型是否一致 Main --15

=============================================================
final
1.修饰类，类就不能被继承（比如一些工具类）
2.方法被修饰就不能被重写
3.修饰变量，有且仅能赋值一次
{
    变量只有两种；
    局部变量
    成员变量{静态成员变量，实例成员变量（final修饰的实例成员变量只能赋值一次，没有必要，不同的实例的成员变量可以不一样）
}
public static final修饰的成员变量就是指的是--常量--

常量常用与系统的配置信息
它直接被宏替换，不存在寻找静态变量再去找值，直接被宏替换
它与直接使用字面量的性能是一样的
==============================================================
javac编译，javap反编译
class
jvm封装class

